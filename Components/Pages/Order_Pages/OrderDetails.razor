@page "/order/details/{Id:int}"
@inject IOrderRepository _orderRepository
@inject IJSRuntime _jsRuntime
@inject AuthenticationStateProvider _authenticationStateProvider

@if (IsProcessing)
{
    <div class="position-absolute w-100 h-100 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" />
    </div>
}
else
{
    <div class="container">
        <div class="card">
            <div class="card-header bg-dark text-light ml-0">
                <div class="container row">
                    <div class="col-12 d-none d-md-block col-md-6 pb-1">
                        <i class="fas fa-shopping-cart"></i> &nbsp; Order Summary
                    </div>
                    <div class="col-12 col-md-4 offset-md-2 text-right">
                        <a href="/orderList" class="btn btn-outline-info form-control btn-sm">Back to Orders</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="container rounded p-2">
                    <div class="row">
                        <div class="col-12 col-lg-6 pb-4">
                            <form method="post">
                                <div class="row">
                                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-primary">Customer Details:</span>
                                    </h4>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Name</div>
                                    <div class="col-9">
                                        @OrderHeader.Name
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Phone</div>
                                    <div class="col-9">
                                        @OrderHeader.PhoneNumber
                                    </div>
                                </div>
                                
                                <div class="row my-1">
                                    <div class="col-3">Email</div>
                                    <div class="col-9">
                                        @OrderHeader.Email
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Order Date</div>
                                    <div class="col-9">
                                        <input type="text" class="form-control" />
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Carrier</div>
                                    <div class="col-9">
                                        <input type="text" class="form-control" />
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Tracking</div>
                                    <div class="col-9">
                                        <input type="text" class="form-control" />
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Shipping Date</div>
                                    <div class="col-9">
                                        <input type="text" class="form-control" />
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Session ID</div>
                                    <div class="col-9">
                                        <input type="text" class="form-control" />
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">Order Status</div>
                                    <div class="col-9">
                                        <input type="text" class="form-control" />
                                    </div>
                                </div>
                                <input type="submit" class="btn btn-warning form-control my-1" value="Update Order Details" />
                            </form>
                        </div>
                        <div class="col-12 col-lg-5 offset-lg-1">
                            <h4 class="d-flex justify-content-between align-items-center mb-3">
                                <span class="text-primary">Order Summary</span>
                            </h4>
                            <ul class="list-group mb-3">
                                @foreach(var details in OrderHeader.OrderDetails)
                                {
                                <li class="list-group-item d-flex justify-content-between p-2">
                                    <div class="row container">
                                        <div class="col-8">
                                            <h6 class="my-0 text-primary">@details.ProductName </h6>
                                            <small class="text-muted">Price : @details.Price </small><br />
                                            <small class="text-muted">Quantity : @details.Count</small>
                                        </div>
                                        <div class="col-4 text-end">
                                            <p class="text-success">@(details.Price*details.Count)</p>
                                        </div>
                                    </div>
                                </li>
                                }
                                <li class="list-group-item bg-info">
                                    <div class="row container">
                                        <div class="col-6">
                                            <h5 class="text-white">TOTAL </h5>
                                        </div>
                                        <div class="col-6 text-end">
                                            <h5 class="text-white">@OrderHeader.OrderTotal</h5>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                            @if (OrderHeader.Status != SD.StatusCancelled && OrderHeader.Status != SD.StatusCompleted 
                            && _authenticationStateProvider.GetAuthenticationStateAsync().GetAwaiter().GetResult().User?.IsInRole(SD.Role_Admmin)==true)
                            {
                                <button class="btn btn-danger form-control my-1" @onclick="()=>UpdateStatus(SD.StatusCancelled)">Cancel Order</button>
                                @if (OrderHeader.Status == SD.StatusPending)
                                {
                                    <button class="btn btn-primary form-control my-1" @onclick="()=>UpdateStatus(SD.StatusReadyForPickUp)">Ready for Pick Up</button>
                                }
                                @if (OrderHeader.Status == SD.StatusReadyForPickUp)
                                {
                                    <button class="btn btn-success form-control my-1" @onclick="()=>UpdateStatus(SD.StatusCompleted)">Completed</button>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@code {
    [Parameter]
    public int Id { get; set; }

    private bool IsProcessing { get; set; } = true;

    private OrderHeader OrderHeader { get; set; }

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            await LoadOrder();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadOrder()
    {
        OrderHeader = await _orderRepository.GetAsync(Id);
    }

    private async Task UpdateStatus(string newStatus)
    {
        var result = await _orderRepository.UpdateStatusAsync(Id, newStatus);
        _jsRuntime?.ToastrSuccess("Status updated successfully to " + newStatus);

    }

}
